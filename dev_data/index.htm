<!DOCTYPE html>
<html>
 <head>
  <meta http-equiv="Content-type" content="text/html; charset=utf-8">
  <link rel="stylesheet" type="text/css" href="css/build.css">
  <!-- <link rel="stylesheet" type="text/css" href="css/bootstrap.min.css">
<link rel="stylesheet" type="text/css" href="css/style.css"> -->
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Страница устройств</title>
  <script type="text/javascript">
   var xhttp=createXmlHttpObject();
   function createXmlHttpObject(){
    if(window.XMLHttpRequest){
     xhttp=new XMLHttpRequest();
    }else{
     xhttp=new ActiveXObject('Microsoft.XMLHTTP');
    }
    return xhttp;
   }

   window.onload = function() {
    deviceList('first');
    var lang = window.navigator.language || navigator.userLanguage;
    var now_day = {
     year: new Date().toLocaleString(lang, {year: 'numeric'}),
     month: new Date().toLocaleString(lang, {month: 'long'}),
     day: new Date().toLocaleString(lang, {day: 'numeric'}),
     weekday: new Date().toLocaleString(lang, {weekday: 'long'})
    };
    document.getElementById('date').innerHTML=now_day.day+' '+now_day.weekday+'<small class="show">'+now_day.month+' '+now_day.year+'<\/small>';
   }

   function findDevice(submit) {
    document.getElementById('content').innerHTML='<div class="alert alert-dismissible alert-info"><div class="loader"><\/div><strong>Пожалуйста подождите, идет сканирование сети.<\/strong><\/div>';
    ajax(window.location.hostname,'devices.scan.json',submit, '1');
    setTimeout(function(){deviceList('search');}, 7000);
   }

   function deviceList(stage,sorting) {
    document.getElementById("scenery-if").innerHTML='';
    document.getElementById("scenery-then").innerHTML='';
    if (stage != 'scenery') document.getElementById('content').innerHTML='';
    var xhttp=createXmlHttpObject();
    xhttp.open("GET", "/devices.list.json?"+Math.floor(Math.random()*10000), true);
    xhttp.send(null);
    xhttp.onload = function(e) {
     var ipModule=JSON.parse(xhttp.responseText);
     for(var key in ipModule) {
      var ipval = ipModule[key].ip;
      if (ipval == '0.0.0.0') {location.href = "/setup.htm#wifi-connect";}
      if (stage == 'search') {
       loadBlock(ipval,'content','first');
       //xhttp.open("GET", "http://"+ipval+"/devices.scan.json"+Math.floor(Math.random()*10000), false);
       //xhttp.send();
      }
      if (stage == 'scenery') {loadScenery(ipval);}
      if (stage == 'first' && sorting == null || sorting == ipModule[key].module[0]) {
       loadBlock(ipval,'content','first');
      }
     }
     if (stage == 'first' or stage == 'search') {
      var moduleArray = [];
      var lookup  = {};
      for (var i in ipModule) {lookup[ipModule[i].module[0]] = ipModule[i];}
      for (i in lookup) {moduleArray.push(lookup[i]);}
      if (moduleArray.length > 1) {toggle('sorting','hidden');}
      document.getElementById("sorting").innerHTML = '<h5 class="alert-warning">Sorting<\/h5><input type="button" class="btn btn-default" value="all" onclick="deviceList(\'first\');">';
      for(var key in moduleArray) {
       document.getElementById("sorting").innerHTML += '<input type="button" class="btn btn-default" onclick="deviceList(\'first\',\''+moduleArray[key].module[0]+'\')" value="'+moduleArray[key].module[0]+'">';
      }
     }
    }
   }

   function loadBlock(ipval, content, stage) {
    if (stage == 'first'){
     document.getElementById(content).innerHTML+='<div id="block-'+ipval+'"><div class="block col-md-5"><div class="loader"><\/div> <a href="http://'+ipval+'">http://'+ipval+'<\/a> <\/div><\/div>';
    }

    var xhttp=createXmlHttpObject();
    xhttp.open("GET", "http://"+ipval+"/block.htm", true);
    xhttp.send(null);
    xhttp.onload = function(e) {
     var data = xhttp.responseText;

     xhttp.open("GET", "http://"+ipval+"/config.live.json?"+Math.floor(Math.random()*10000), true);
     xhttp.send(null);
     xhttp.onload = function(e) {
      var jsonResponse1 = JSON.parse(xhttp.responseText);

      xhttp.open("GET", "http://"+ipval+"/lang/lang."+jsonResponse1.lang+".json", true);
      xhttp.send(null);
      xhttp.onload = function(e) {
       var jsonResponse2=JSON.parse(xhttp.responseText);
       var jsonResponse = Object.assign(jsonResponse1, jsonResponse2);

       var theCookies = document.cookie.split(';');
       for (var i = 1 ; i <= theCookies.length; i++) {
        jsonResponse[theCookies[i-1].split("=")[0].replace(/^ /,'')] = theCookies[i-1].split("=")[1];
       }

       jsonResponse.ip = ipval;
       if (jsonResponse.state == 0){
        jsonResponse.state = jsonResponse.LangOn;
       } else {
        jsonResponse.state = jsonResponse.LangOff;
       }

       if (window.location.hostname == ipval) {
        var new_string2;
        var bodyData = document.getElementsByTagName('body')[0].innerHTML;
        for (var key in jsonResponse) {
         new_string2 = bodyData.replace(new RegExp('{{'+key+'}}', 'g'), jsonResponse[key]);
         bodyData = new_string2;
        }
        document.getElementsByTagName('body')[0].innerHTML = new_string2;
       }

       var new_string;
       for (var key in jsonResponse) {
        new_string = data.replace(new RegExp('{{'+key+'}}', 'g'), jsonResponse[key]);
        data = new_string;
       }
       document.getElementById("block-"+ipval).innerHTML=new_string;
      }
     }
    }
   }

   function ajax(ipHost, pagename, submit, loadB) {
    var old_submit = submit.value;
    var d = new Date(); // for now
    var datetext = d.getHours()+":"+d.getMinutes()+":"+d.getSeconds();
    var parent = submit.parentNode.childNodes[1].innerHTML;
    document.getElementById('history').insertAdjacentHTML('afterbegin', '<li>'+datetext+'<span class="history" style="cursor:pointer" onclick="toggle(\'hide-'+datetext+'\');return false"><b>'+parent+'<\/b><br><em>'+old_submit+'<\/em><small class="hidden" id="hide-'+datetext+'"><hr>URL: <a href="http://'+ipHost+'/'+pagename+'">http://'+ipHost+'/'+pagename+'<\/a><\/small><\/span><\/li>');
    submit.value = 'Loading...';
    submit_disabled(true);
    var xhttp=createXmlHttpObject();
    xhttp.open("GET", "http://"+ipHost+"/"+pagename, true);
    xhttp.send(null);
    xhttp.onload = function(e) {
     submit.value=old_submit;
     submit_disabled(false);
     if (!loadB) {loadBlock(ipHost,'block-'+ipHost, '');}
    }
   }

   function submit_disabled(request){
    var inputs = document.getElementsByTagName("input");
    for (var i = 0; i < inputs.length; i++) {
     if (inputs[i].type === 'submit') {inputs[i].disabled = request;}
    }
   }

   function toggle(target,status) {
    var curVal = document.getElementById(target).classList;
    if (curVal.contains('hidden')) {
     if (status != 'show') {
      curVal.remove('hidden');
      curVal.add('show');
     }
    } else {
     if (status != 'hidden') {
      curVal.remove('show');
      curVal.add('hidden');
     }
    }
   }

   function val(id,val){
    if (val) {
     document.getElementById(id).value=(val==' '?'':val);
    } else {
     var v = document.getElementById(id).value;
     return v;
    }
   }

   function setCookie(name, value, days, submit) {
    if (days) {
     var date = new Date();
     date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
     var expires = "; expires=" + date.toGMTString();
    }
    else expires = "";
    document.cookie = name + "=" + value + expires + "; path=/";
    submit.parentNode.classList.add('hidden');
   }

   function hide(name, submit) {
    // if (confirm(jsonResponse.LangHedden)) {
    submit.parentNode.classList.add('hidden');
    setCookie(name,'hidden',365,submit);
    // }
   }

   function loadScenery(ipval) {
    var xhttp=createXmlHttpObject();
    xhttp.open("GET", "http://"+ipval+"/modules.json?"+Math.floor(Math.random()*10000), true);
    xhttp.send(null);
    xhttp.onload = function(e) {
     var jsonResponses = JSON.parse(xhttp.responseText);
     jsonResponses.ip = ipval;
     document.getElementById("scenery-if").innerHTML += '<option value="'+jsonResponses.ip+'">'+jsonResponses.SSDP+'<\/option>';
     document.getElementById("scenery-then").innerHTML += '<option value="'+jsonResponses.ip+'">'+jsonResponses.SSDP+'<\/option>';
    }
   }

   function findSelect(val) {
    var e = document.getElementById(val);
    return e.options[e.selectedIndex].value;
   }
   function addScenery(submit) {
    ajax(findSelect('scenery-if'), "scenery?ifstate="+findSelect('state1')+"&then="+findSelect('scenery-then')+"&state="+findSelect('state2'), submit, '1');
   }
  </script>
 </head>
 <body>
  <div class="container device">
   <div class="header">
    <div class="btn-group pull-right" style="margin-top:35px;">
     <a href="#" class="btn btn-default" onclick="deviceList('first');">Refresh</a>
     <a href="#" class="btn btn-default dropdown-toggle" onclick="toggle('help');">Help <span class="caret"></span></a>
     <ul class="dropdown-menu hidden" id="help"><li><a href="https://github.com/renat2985/rgb">RGB</a></li><li><a href="https://github.com/tretyakovsa/Sonoff_WiFi_switch">Sonoff</a></li><li><a href="https://github.com/tretyakovsa/jaluzi">Jalousie</a></li></ul>
    </div>
    <h1 id="date"><br><small></small></h1>
   </div>
   <div class="col-sm-12 col-md-3">
    <h5 style="background-color:#C0C7CA;cursor:pointer" onclick="toggle('history');return false">{{LangHistory}}</h5>
    <ul id="history"></ul>
    <hr>
    <div class="block hidden" id="sorting"></div>
    <div class="block">
     <h5 class="alert-danger">{{LangSearch1}}</h5>
     <div class="alert alert-dismissible alert-info">{{LangSearch2}}</div>
     <input type="button" class="btn btn-block btn-default" value="{{LangSearch3}}" onclick="findDevice(this);window.scrollTo(0,0);">
    </div>
    <div class="block">
     <h5 class="alert-warning">{{LangScenery1}}</h5>
     <div class="alert alert-dismissible alert-info">{{LangScenery2}}</div>
     <input type="button" class="btn btn-block btn-default" value="{{LangAddScenery}}" onclick="deviceList('scenery');toggle('scenery');window.scrollTo(0,0);">
    </div>
   </div>
   <div class="col-sm-offset-2 col-sm-6 pop-up hidden" id="scenery">
    <h5 class="alert-warning">{{LangScenery1}}</h5>
    <div class="alert alert-dismissible alert-info">Soon... If you like this project, you can give me a cup of coffee paypal:wul@inbox.lv :) <br> Скоро... Чем больше будит пожерствований на проект, тем быстрее мы сделаем.</div>
    <h4>{{LangIf}} <select class="btn btn-default" id="scenery-if"></select>
     = <select class="btn btn-default" id="state1"><option value="1">{{LangOn.}}</option><option value="0">{{LangOff.}}</option></select>
     {{LangThen}} <select class="btn btn-default" id="scenery-then"></select>
     = <select class="btn btn-default" id="state2"><option value="1">{{LangOn.}}</option><option value="0">{{LangOff.}}</option></select>
    </h4>
    <input type="button" class="btn btn-block btn-success" value="{{LangSave}}" onclick="addScenery(this);toggle('scenery');">
    <hr>
    <h4>Список всех сценариев</h4>
    <p id="scenery-list"></p>
    <input class="btn btn-block btn-default" value="{{LangCancel}}" onclick="toggle('scenery');" type="button">
   </div>
   <div class="col-sm-12 col-md-9" style="text-align:center;" id="content">
   </div>
  </div>
 </body>
</html>
