<!DOCTYPE html>
<html>
 <head>
  <meta http-equiv="Content-type" content="text/html; charset=utf-8">
  <link rel="stylesheet" type="text/css" href="css/build.css?v31.07.2017">
  <!-- <link rel="stylesheet" type="text/css" href="css/bootstrap.min.css">
<link rel="stylesheet" type="text/css" href="css/style.css"> -->
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Device Page</title>
  <script type="text/javascript">
   var xhttp=createXmlHttpObject();
   var jsonResponse;
   function createXmlHttpObject(){
    if(window.XMLHttpRequest){
     xhttp=new XMLHttpRequest();
    }else{
     xhttp=new ActiveXObject('Microsoft.XMLHTTP');
    }
    return xhttp;
   }

   window.onload = function() {
    if (window.location.hash.substring(1)) {
     deviceList('first', decodeURIComponent(window.location.hash.substring(1)));
    } else {
     deviceList('first');
    }
   }


   function deviceList(stage,sorting) {
    document.getElementById('content').innerHTML='';

    document.getElementById("content").innerHTML = '<div class="col-md-12"><div class="block"><h5 class="alert-info">{{LangDevices}}<\/h5><table id="table-content" class="table table-striped table-hover" style="width:100%;text-align:left;"><\/table><\/div><\/div>';
    document.getElementById("content").innerHTML += '<div class="col-md-6"><div class="block"><h5 class="alert-default">Sensors<\/h5><table id="table-sensors" class="table table-striped table-hover" style="width:100%;text-align:left;"><\/table><\/div><\/div>';
    document.getElementById("content").innerHTML += '<div class="col-md-6"><div class="block"><h5 class="alert-warning">{{LangTimer}}<\/h5><table id="table-timers" class="table table-striped table-hover" style="width:100%;text-align:left;"><\/table><\/div><\/div>';

    var xhttp=createXmlHttpObject();
    xhttp.open("GET", "/ip.list.json?"+Math.floor(Math.random()*10000), true);
    xhttp.send(null);
    xhttp.onload = function(e) {
     var ipDevice=JSON.parse(xhttp.responseText);
     for(i = 0;i<ipDevice.ssdpList.length;i++) {
      loadModule(ipDevice.ssdpList[i].ip,stage,sorting);
     }
     if (ipDevice.ssdpList.length == 0) {
      location.href = "/page.htm?first-connect";
     }
    }
   }



   function loadModule(ipval,stage,sorting) {

    var xhttp=createXmlHttpObject();
    xhttp.open("GET", "http://"+ipval+"/modules.json", true)
    xhttp.send(null);
    xhttp.onload = function(e) {

     var ipModule=JSON.parse(xhttp.responseText);
     var allModules = [];
     var allSpace = [];
     //  for(var key in ipModule) {
     if (stage == 'search') {
      loadBlock(ipval,'content','first',ipModule.module);
     }
     // Сортировка
     if (stage == 'first' && sorting == null || searchModule(ipModule.module,sorting) == 'yes' || ipModule.space == sorting) {
      loadBlock(ipval,'content','first',ipModule.module);
     }
     for (var s in ipModule.module) {
      // if (ipModule.module[s] != 'ntp' && ipModule.module[s] != 'ddns' && ipModule.module[s] != 'timers' && ipModule.module[s] != 'mqtt')
      allModules.push(ipModule.module[s]);
     }
     allSpace.push(ipModule.space);
     // }
     if (stage == 'first' || stage == 'search') {
      var spaceArray = [];
      var space_lookup  = {};
      for (var i in allSpace) {space_lookup[allSpace[i]] = allSpace[i];}
      for (i in space_lookup) {spaceArray.push(space_lookup[i]);}
      if (spaceArray.length == 1) {toggle('sorting-space','show');}
      document.getElementById("sorting-space").innerHTML = '<h5 class="alert-default">{{LangSorting}}<\/h5><a href="#" class="btn btn-default" onclick="deviceList(\'first\');">all<\/a>';
      for(var key in spaceArray) {
       if (spaceArray[key]) document.getElementById("sorting-space").innerHTML += '<a href="#'+spaceArray[key]+'" class="btn btn-default" onclick="deviceList(\'first\',\''+spaceArray[key]+'\')">'+spaceArray[key]+'<\/a>';
      }
      var moduleArray = [];
      var lookup  = {};
      for (var i in allModules) {lookup[allModules[i]] = allModules[i];}
      for (i in lookup) {moduleArray.push(lookup[i]);}
      if (ipModule.length == 1) {toggle('sorting-module','show');}
      document.getElementById("sorting-module").innerHTML = '<h5 class="alert-default">{{LangSorting}}<\/h5><a href="#" class="btn btn-sm btn-default" onclick="deviceList(\'first\');">all<\/a>';
      for(var key in moduleArray) {
       if (moduleArray[key]) document.getElementById("sorting-module").innerHTML += '<a href="#'+moduleArray[key]+'" class="btn btn-sm btn-default" onclick="deviceList(\'first\',\''+moduleArray[key]+'\')">'+moduleArray[key]+'<\/a>';
      }
     }

    }
   }


   function loadBlock(ipval, content, stage, modules) {

    if (!modules) {
     var xhttp=createXmlHttpObject();
     xhttp.open("GET", "http://"+ipval+"/modules.json", true);
     xhttp.send(null);
     xhttp.onload = function(e) {
      var jsonResponse3=JSON.parse(xhttp.responseText);
      loadBlock2(jsonResponse3.module,stage);
     }
    } else {
     loadBlock2(modules,stage);
    }

    function loadBlock2(modules,stage){
     var xhttp=createXmlHttpObject();
     xhttp.open("GET", "http://"+ipval+"/config.live.json?"+Math.floor(Math.random()*10000), true);
     xhttp.send(null);
     xhttp.onload = function(e) {
      var jsonResponse1 = JSON.parse(xhttp.responseText);

      xhttp.open("GET", "http://"+ipval+"/lang/lang."+jsonResponse1.lang+".json", true);
      xhttp.send(null);
      xhttp.onload = function(e) {
       var jsonResponse2=JSON.parse(xhttp.responseText);
       jsonResponse = Object.assign(jsonResponse1, jsonResponse2);
       var theCookies = document.cookie.split(';');
       for (var i = 1 ; i <= theCookies.length; i++) {
        jsonResponse[theCookies[i-1].split("=")[0].replace(/^ /,'')] = theCookies[i-1].split("=")[1];
       }

       if (stage == 'first'){
        if (searchModule(modules,"timers") == 'yes'){
         loadTimers(ipval,'table-timers',jsonResponse);
        }
        if (searchModule(modules,"temperature") == 'yes'){
         loadSensors(ipval,'table-sensors',jsonResponse);
        }
        if (searchModule(modules,"analog") == 'yes'){
         loadAnalog(ipval,'table-sensors',jsonResponse);
        }
       }

       if (searchModule(modules,"relay") == 'yes'){
        if (stage == 'first'){document.getElementById('table-content').innerHTML+='<tr id="block-'+ipval+'-relay"><\/tr>';}
        var relayNumber = '<input onclick="ajax(\''+jsonResponse.ip+'\',\'relay\',this);" value="'+(jsonResponse.state=='0'?jsonResponse.LangOn:jsonResponse.LangOff)+'" class="btn btn-'+(jsonResponse.state=='0'?'primary':'info')+'" type="button">';
        for (var i = 1; i < 5; i++) {
         if (searchModule(modules,"relay"+i) == 'yes'){
          relayNumber += '<input onclick="ajax(\''+jsonResponse.ip+'\',\'relay'+i+'\',this);" value="'+(jsonResponse.state=='0'?jsonResponse.LangOn:jsonResponse.LangOff)+'" class="btn btn-'+(jsonResponse.state=='0'?'primary':'info')+'" type="button">';
         }
        }
        document.getElementById("block-"+ipval+"-relay").innerHTML='<td>'+(jsonResponse.space?'<a href="#'+jsonResponse.space+'" onclick="deviceList(\'first\',\''+jsonResponse.space+'\');" class="label label-default">'+jsonResponse.space+'<\/a>':'')+' <a href="#relay" onclick="deviceList(\'first\',\'relay\');" class="label label-danger">relay<\/a> <b><a href="http://'+jsonResponse.ip+'">'+jsonResponse.SSDP+'<\/a><\/b><\/td><td>'+relayNumber+'<\/td><td><div class="btn-group pull-right"><a href="http://'+jsonResponse.ip+'/page.htm?relay" class="btn btn-default"><i class="set-img"><\/i><span class="hidden-xs">'+jsonResponse.LangOptions1+'<\/span><\/a><a href="http://'+jsonResponse.ip+'/page.htm?setup" title="'+jsonResponse.LangSetting3+'" class="btn btn-default"><i class="opt-img"><\/i><\/a><\/div><\/td>';
       }
       if (searchModule(modules,"rgb") == 'yes'){
        if (stage == 'first'){document.getElementById('table-content').innerHTML+='<tr id="block-'+ipval+'-rgb"><\/tr>';}
        document.getElementById("block-"+ipval+"-rgb").innerHTML='<td>'+(jsonResponse.space?'<a href="#'+jsonResponse.space+'" onclick="deviceList(\'first\',\''+jsonResponse.space+'\');" class="label label-default">'+jsonResponse.space+'<\/a>':'')+' <a href="#rgb" onclick="deviceList(\'first\',\'rgb\');" class="label label-info">rgb<\/a> <b><a href="http://'+jsonResponse.ip+'">'+jsonResponse.SSDP+'<\/a><\/b><\/td><td><input onclick="ajax(\''+jsonResponse.ip+'\',\'rgb\',this);" value="'+(jsonResponse.stateRGB=='0'?jsonResponse.LangOn:jsonResponse.LangOff)+'" class="btn btn-'+(jsonResponse.stateRGB=='0'?'primary':'info')+'" type="button"><\/td><td><div class="btn-group pull-right"><a href="http://'+jsonResponse.ip+'/page.htm?rgb" class="btn btn-default"><i class="set-img"><\/i><span class="hidden-xs">'+jsonResponse.LangOptions1+'<\/span><\/a><a href="http://'+jsonResponse.ip+'/page.htm?setup" title="'+jsonResponse.LangSetting3+'" class="btn btn-default"><i class="opt-img"><\/i><\/a><\/div><\/td>';
       }
       if (searchModule(modules,"jalousie") == 'yes'){
        if (stage == 'first'){document.getElementById('table-content').innerHTML+='<tr id="block-'+ipval+'-jalousie"><\/tr>';}
        document.getElementById("block-"+ipval+"-jalousie").innerHTML='<td>'+(jsonResponse.space?'<a href="#'+jsonResponse.space+'" onclick="deviceList(\'first\',\''+jsonResponse.space+'\');" class="label label-default">'+jsonResponse.space+'<\/a>':'')+' <a href="#jalousie" onclick="deviceList(\'first\',\'jalousie\');" class="label label-success">jalousie<\/a> <b><a href="http://'+jsonResponse.ip+'">'+jsonResponse.SSDP+'<\/a><\/b><\/td><td><input onclick="ajax(\''+jsonResponse.ip+'\',\'cmd?command=jalousienot\',this);" value="'+(jsonResponse.stateJalousie=='0'?jsonResponse.LangOpen:jsonResponse.LangClose)+'" class="btn btn-'+(jsonResponse.stateJalousie=='0'?'primary':'info')+'" type="button"><\/td><td><div class="btn-group pull-right"><a href="http://'+jsonResponse.ip+'/page.htm?jalousie" class="btn btn-default"><i class="set-img"><\/i><span class="hidden-xs">'+jsonResponse.LangOptions1+'<\/span><\/a><a href="http://'+jsonResponse.ip+'/page.htm?setup" title="'+jsonResponse.LangSetting3+'" class="btn btn-default"><i class="opt-img"><\/i><\/a><\/div><\/td>';
       }

       if (window.location.hostname == ipval && stage == 'first') {
        var new_string2;
        var bodyData = document.getElementsByTagName('body')[0].innerHTML;
        for (var key in jsonResponse) {
         new_string2 = bodyData.replace(new RegExp('{{'+key+'}}', 'g'), jsonResponse[key]);
         bodyData = new_string2;
        }
        document.getElementsByTagName('body')[0].innerHTML = new_string2;

        if (searchModule(modules,"upgrade") == 'yes'){
         loadBuild(jsonResponse.spiffsData, jsonResponse.LangUpgrade);
        }

       }

      }
     }
    }
   }


   function loadTimers(ipval, content, jsonResponse) {
    var xmlHttp=createXmlHttpObject();
    xmlHttp.open("GET", "http://"+ipval+"/timer.save.json", true);
    xmlHttp.send(null);
    xmlHttp.onload = function(e) {
     var timers=JSON.parse(xmlHttp.responseText);
     timers.timer.sort(function(a,b){return (a.time > b.time) ? 1 : ((b.time > a.time) ? -1 : 0);});
     var timerList = '';
     for (var i = 0; i < timers.timer.length; i++) {
      if (timers.timer[i].trigger == "on") {timers.timer[i].trigger = '<span class="label label-success">'+jsonResponse["LangOn."]+'<\/span>';}
      if (timers.timer[i].trigger == "off") {timers.timer[i].trigger = '<span class="label label-danger">'+jsonResponse["LangOff."]+'<\/span>';}
      if (timers.timer[i].trigger == "open") {timers.timer[i].trigger = '<span class="label label-success">'+jsonResponse["LangOpen"]+'<\/span>';}
      if (timers.timer[i].trigger == "close") {timers.timer[i].trigger = '<span class="label label-danger">'+jsonResponse["LangClose"]+'<\/span>';}
      if (timers.timer[i].trigger == "not") {timers.timer[i].trigger = '<span class="label label-info">'+jsonResponse["LangSwitch."]+'<\/span>';}
      if (timers.timer[i].module == "relay") {timers.timer[i].module = '<a class="label label-danger" href="#relay" onclick="deviceList(\'first\',\'relay\');">relay<\/a>';}
      if (timers.timer[i].module == "rgb") {timers.timer[i].module = '<a class="label label-info" href="#rgb" onclick="deviceList(\'first\',\'rgb\');">rgb<\/a>';}
      if (timers.timer[i].module == "jalousie") {timers.timer[i].module = '<a class="label label-success" href="#jalousie" onclick="deviceList(\'first\',\'jalousie\');">jalousie<\/a>';}
      timers.timer[i].day = jsonResponse["Lang"+timers.timer[i].day];
      timerList += '<tr><td>'+timers.timer[i].module+'<\/td><td>'+timers.timer[i].trigger+'<\/td><td>'+timers.timer[i].day.substring(0,7)+'.<\/td><td>'+timers.timer[i].time+(timers.timer[i].work?' - '+timers.timer[i].work:'')+'<\/<td><\/tr>';
     }
     document.getElementById(content).innerHTML+='<tr><td>'+(jsonResponse.space?'<a class="label label-default" href="#'+jsonResponse.space+'" onclick="deviceList(\'first\',\''+jsonResponse.space+'\');">'+jsonResponse.space+'<\/a>':'')+' <\/td><td colspan="3"><b><a href="http://'+jsonResponse.ip+'/timer.htm">'+jsonResponse.SSDP+'<\/a><\/b><\/td><\/tr>'+(timerList?timerList:'<tr><td colspan="4">'+jsonResponse.LangNoTimers+'<\/td><\/tr>');
    }
   }


   function loadSensors(ipval, content, jsonResponse) {
    var xmlHttp=createXmlHttpObject();
    xmlHttp.open("GET", "http://"+ipval+"/sensor.json", true);
    xmlHttp.send(null);
    xmlHttp.onload = function(e) {
     var sensors=JSON.parse(xmlHttp.responseText);
     document.getElementById(content).innerHTML+='<tr><td>'+(jsonResponse.space?'<a class="label label-default" href="#'+jsonResponse.space+'" onclick="deviceList(\'first\',\''+jsonResponse.space+'\');">'+jsonResponse.space+'<\/a>':'')+' <\/td><td><b><a href="http://'+jsonResponse.ip+'/page.htm?chart&sensor">'+jsonResponse.SSDP+'<\/a><\/b><\/td><\/tr><tr><td>'+jsonResponse.LangTemperature+'<\/td><td><b>'+sensors.data+(sensors.data2?', '+sensors.data2:'')+(sensors.data3?', '+sensors.data3:'')+'<\/b><\/td><\/tr>';
    }
   }

   function loadAnalog(ipval, content, jsonResponse) {
    var xmlHttp=createXmlHttpObject();
    xmlHttp.open("GET", "http://"+ipval+"/analog.json", true);
    xmlHttp.send(null);
    xmlHttp.onload = function(e) {
     var sensors=JSON.parse(xmlHttp.responseText);
     document.getElementById(content).innerHTML+='<tr><td>'+(jsonResponse.space?'<a class="label label-default" href="#'+jsonResponse.space+'" onclick="deviceList(\'first\',\''+jsonResponse.space+'\');">'+jsonResponse.space+'<\/a>':'')+' <\/td><td><b><a href="http://'+jsonResponse.ip+'/page.htm?chart&analog">'+jsonResponse.SSDP+'<\/a><\/b><\/td><\/tr><tr><td>'+jsonResponse.LangAnalog+'<\/td><td><b>'+sensors.data+'<\/b><\/td><\/tr>';
    }
   }

   function searchModule(modules,find) {
    for(var key in modules) {
     if (modules[key] == find) {
      return "yes";
     }
    }
   }

   function ajax(ipHost, pagename, submit, loadB) {
    var old_submit = submit.value;
    var d = new Date(); // for now
    var datetext = d.getHours()+":"+d.getMinutes()+":"+d.getSeconds();
    var parent = '';
    //var parent = submit.parentNode.childNodes[1].innerHTML;
    var parent = submit.parentNode.parentNode.children[0].innerHTML;
    document.getElementById('history').insertAdjacentHTML('afterbegin', '<li><span class="label label-default">&#8987; '+datetext+'<\/span><span class="history" style="cursor:pointer" onclick="toggle(\'hide-'+datetext+'\');return false"><b>'+parent+'<\/b><br><em>'+old_submit+'<\/em><small class="hidden" id="hide-'+datetext+'"><hr>URL: <a href="http://'+ipHost+'/'+pagename+'">http://'+ipHost+'/'+pagename+'<\/a><\/small><\/span><\/li>');
    submit.value = 'Loading...';
    submit_disabled(true);
    var xhttp=createXmlHttpObject();
    xhttp.open("GET", "http://"+ipHost+"/"+pagename, true);
    xhttp.send(null);
    xhttp.onload = function(e) {
     submit.value=old_submit;
     submit_disabled(false);
     // if (!loadB) {loadBlock(ipHost,'block-'+ipHost, '');}
     var response=JSON.parse(xhttp.responseText);
     if (response.class && response.class!='undefined') {submit.className = response.class.replace(/btn-block btn-lg/,'');}
     if (response.style && response.style!='undefined') {submit.style = response.style;}
     if (response.title && response.title!='undefined') {
      if (submit.tagName == 'INPUT') {submit.value = jsonResponse[response.title.slice(2, -2)];}
     }
    }
   }

   function submit_disabled(request){
    var inputs = document.getElementsByTagName("input");
    for (var i = 0; i < inputs.length; i++) {
     if (inputs[i].type === 'submit') {inputs[i].disabled = request;}
    }
   }

   function toggle(target,status) {
    var curVal = document.getElementById(target).classList;
    if (curVal.contains('hidden')) {
     if (status != 'show') {
      curVal.remove('hidden');
      curVal.add('show');
     }
    } else {
     if (status != 'hidden') {
      curVal.remove('show');
      curVal.add('hidden');
     }
    }
   }

   function val(id,val){
    if (val) {
     document.getElementById(id).value=(val==' '?'':val);
    } else {
     var v = document.getElementById(id).value;
     return v;
    }
   }

   function setCookie(name, value, days, submit) {
    if (days) {
     var date = new Date();
     date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
     var expires = "; expires=" + date.toGMTString();
    }
    else expires = "";
    document.cookie = name + "=" + value + expires + "; path=/";
    submit.parentNode.classList.add('hidden');
   }

   function hide(name, submit) {
    // if (confirm(jsonResponse.LangHedden)) {
    submit.parentNode.classList.add('hidden');
    setCookie(name,'hidden',365,submit);
    // }
   }

   function loadBuild(spiffs, LangUpgrade){
    var xmlHttp=createXmlHttpObject();
    xmlHttp.open('GET','https://api.github.com/repos/tretyakovsa/Sonoff_WiFi_switch/contents/build',true);
    xmlHttp.send(null);
    xmlHttp.onload = function(e) {
     var jsonBuild=JSON.parse(xmlHttp.responseText);
     jsonBuild.sort(function(a,b){return (a.name< b.name) ? 1 : ((b.name < a.name) ? -1 : 0);});
     if (jsonBuild[0].name != spiffs) {
      document.getElementById('update').innerHTML = '<a href="/upgrade?spiffs=http://backup.privet.lv/esp/sonoff/'+jsonBuild[0].name+'&build=http://backup.privet.lv/esp/sonoff/build.0x00000'+jsonBuild[0].name.substring(14)+'" onclick="return confirm(\''+LangUpgrade+'\')"><i class="warning-img"><\/i><\/a>';
     }
    }
   }
  </script>
 </head>
 <body>
  <div id="news"></div>
  <div class="container device index2">
   <div class="header">
    <div class="btn-group pull-right" style="margin-top:35px;">
     <a href="#" class="btn btn-default" onclick="deviceList('first');"><i class="refresh-img"></i></a>
     <a href="#" class="btn btn-default dropdown-toggle" onclick="toggle('help');"><i class="help-img"></i> <span class="hidden-xs">{{LangHelp}}</span> <span class="caret"></span></a>
     <ul class="dropdown-menu hidden" id="help"><li><a href="https://github.com/tretyakovsa/Sonoff_WiFi_switch/issues" target="_blank"><b>Sonoff</b> (Relay)</a></li><li><a href="https://github.com/renat2985/rgb/issues" target="_blank"><b>RGB</b> (WS2811-12/NeoPixel)</a></li><li><a href="https://github.com/tretyakovsa/jaluzi/issues" target="_blank"><b>Jalousie</b> (Motor)</a></li></ul>
    </div>
    <div class="pull-right" style="margin-top:35px;margin-right:5px">
     <div class="btn-group">
      <a href="#" class="btn btn-warning dropdown-toggle" onclick="toggle('skins');">{{LangDesign}} <span class="caret"></span></a>
      <ul class="dropdown-menu hidden" id="skins"><li><a href="/skins?set=index.htm"><b>Default</b></a></li><li><a href="/skins?set=index2.htm"><b>Inline</b></a></li><li><a href="/skins?set=index3.htm"><b>Block</b></a></li><li><a href="/skins?set=index4.htm"><b>Life</b></a></li></ul>
     </div>
    </div>
    <h1>{{space}}<br><small class="show">{{SSDP}}<sup id="update"></sup></small></h1>
   </div>
   <div class="col-sm-12 col-md-3">
    <h5 style="background-color:#C0C7CA;cursor:pointer" class="hidden-xs" onclick="toggle('history');return false">{{LangHistory}}</h5>
    <ul id="history" class="hidden-xs"></ul>
    <hr>
    <div class="block" id="sorting-space"></div>
    <div class="block" id="sorting-module"></div>
    <div class="col-xs-6 col-md-12">
     <div class="block">
      <h5 class="alert-warning">{{LangScenery1}}</h5>
      <div class="alert alert-dismissible alert-info {{g94244}}"><button class="close" onclick="hide('g94244',this);" type="button">×</button>{{LangScenery2}}</div>
      <a class="btn btn-block btn-default" href="/scenery.htm">{{LangAddScenery}}</a>
     </div>
    </div>
    <div class="row"></div>
   </div>
   <div class="col-sm-12 col-md-9" id="content"></div>
  </div>
 </body>
</html>
